package com.steinschen.main;

import java.util.Random;

public class Enemy {

	private Move move;
	private Board board;
	
	private Random r = new Random();
	
	private boolean playerMoved, gameOver;
	
	private int dif;
	
	private int rX, rY, rNx, rNy, rDir;
	
	public Enemy(Move move, Board board) {
		
		this.move = move;
		this.board = board;
	}
	
	public void calculateBestMove() {
		
		if (!gameOver) {
			if(dif==0) {
				
				do  {
				rY = r.nextInt(2);
				rX = r.nextInt(8);
				rDir = r.nextInt(2);
				if(rDir==0) rDir=-1;
				
				rNx=rX+rDir;
				if(rNx==8) {
					rNx=7;
					if(rY==0) rNy=1;
					if(rY==1) rNy=0;
				}
				if(rNx==-1) {
					rNx=0;
					if(rY==0) rNy=1;
					if(rY==1) rNy=0;
				}
				
				} while(!move.makeMove(2, 2, rX, rY, rNx, rNy, 2) && !board.checkForLoss(2) && !board.checkForNoMovePossible(2));
			}
		}
		 
		
	}
	
	public int getDif() {
		return dif;
	}
	
	public void setDif(int dif) {
		this.dif = dif;
	}

	public boolean getPlayerMoved() {
		return playerMoved;
	}

	public void setAiTurn(boolean playerMoved) {
		this.playerMoved = playerMoved;
	}
	
	public boolean getGameOver() {
		return gameOver;
	}

	public void setGameOver(boolean gameOver) {
		this.gameOver = gameOver;
	}
}
