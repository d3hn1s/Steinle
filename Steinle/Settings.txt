package com.steinschen.main;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

import com.steinschen.main.Game.STATE;

public class Settings{
	
	
	private AudioPlayer ap;
	private Game game;
	
	private BufferedImage box;
	private BufferedImage boxChecked;
	private BufferedImage soundUnmuteIcon;
	private BufferedImage soundMuteIcon;
	private BufferedImage musicUnmuteIcon;
	private BufferedImage musicMuteIcon;
	
	private BufferedImage settings;
	
	private float newVolume=1f;
	private double volumePos=785;
	
	public Settings(Game game, AudioPlayer ap) {
		this.game = game;
		this.ap = ap;
		
		SpriteSheet ss = new SpriteSheet(Game.spriteSheet);
		
		box = ss.grabImage(2, 3, 32, 32);
		boxChecked = ss.grabImage(2, 4, 32, 32);
		
		settings = ss.grabImage(49, 1, 1080, 700);
		
		soundUnmuteIcon = ss.grabImage(1, 2, 32, 32);
		soundMuteIcon = ss.grabImage(1, 3, 32, 32);
		musicUnmuteIcon = ss.grabImage(1, 4, 32, 32);
		musicMuteIcon = ss.grabImage(2, 1, 32, 32);
	}
	
	public void tick() {
		if(ap.getDripActivated()) AudioPlayer.getMusic("music").setVolume(AudioPlayer.getMusic("drip").getVolume());
		else AudioPlayer.getMusic("drip").setVolume(AudioPlayer.getMusic("music").getVolume());
		AudioPlayer.getMusic("music").setVolume(newVolume);
		AudioPlayer.getMusic("drip").setVolume(newVolume);
	}
	
	public void render(Graphics g) {
		
		if(game.gameState==STATE.Settings) {
			
			g.drawImage(settings, 0, 0, null);
			if(!ap.getDripActivated()) g.drawImage(box, 590, 335, null);
			if(ap.getDripActivated())	g.drawImage(boxChecked, 590, 335, null);
			
			g.setColor(Color.black);
			g.fillRect((int)volumePos, 464, 5, 30);
			
			if(ap.getMusicMuted()) g.drawImage(musicMuteIcon, 980, 30, null);
			else g.drawImage(musicUnmuteIcon, 980, 30, null);
			
			if(ap.getSoundMuted()) g.drawImage(soundMuteIcon, 925, 30, null);
			else g.drawImage(soundUnmuteIcon, 925, 30, null);
		}
	}

	public double getVolumePos() {
		return volumePos;
	}

	public void setVolumePos(double volumePos) {
		this.volumePos = volumePos;
		newVolume = (float)((volumePos-500)/285);
	}
		
}
